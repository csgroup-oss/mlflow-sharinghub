[build-system]
requires = ["hatchling >= 1.21.0", "hatch-vcs >= 0.4.0 "]
build-backend = "hatchling.build"

# -----------------------------------------------
# Package infos

[project]
name = "mlflow_sharinghub"
description = "MLflow server plugin for SharingHub integration"
authors = [
    { name = "ClÃ©ment GUICHARD", email = "clement.guichard@csgroup.eu" },
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.12"
keywords = [
    "mlflow",
    "sharinghub",
    "gitlab",
    "openid",
    "authenticated",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Framework :: Flask",
    "Environment :: Plugins",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Intended Audience :: Science/Research",
    "Operating System :: POSIX :: Linux",
    "License :: OSI Approved :: MIT License",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: GIS",
    "Natural Language :: English",
    "Typing :: Typed",
]
dependencies = [
    "authlib~=1.3.0",
    "cachelib~=0.13",
    "mlflow~=2.12.1",
    "setuptools",
    "requests~=2.31",
    "Flask-Session~=0.8",
    "Flask~=3.0",
    "python-dotenv~=1.0",
]
dynamic = ["version"]

[project.urls]
"Homepage" = "https://gitlab.si.c-s.fr/space_applications/mlops-services/mlflow-sharinghub"
"Source" = "https://gitlab.si.c-s.fr/space_applications/mlops-services/mlflow-sharinghub"
"Bug Tracker" = "https://gitlab.si.c-s.fr/space_applications/mlops-services/mlflow-sharinghub/issues"

[project.entry-points."mlflow.app"]
sharinghub = "mlflow_sharinghub.app:create_app"

# -----------------------------------------------
# Build & Packaging

[tool.hatch.build]
skip-excluded-dirs = true

[tool.hatch.version]
source = "vcs"
fallback-version = "0.0.0"

[tool.hatch.version.raw-options]
version_scheme = "python-simplified-semver"
local_scheme = "node-and-date"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.0.0"
annotated_tag = true
changelog_incremental = true
update_changelog_on_bump = true

# -----------------------------------------------
# Tests

[tool.pytest.ini_options]
minversion = "8.0"
required_plugins = [
    "pytest-cov",
    "pytest-html",
]
testpaths = [
    "src",
    "tests",
]
addopts = [
    "--show-capture=no",
    "--doctest-modules",
    # pytest-cov
    "--cov=src",
    "--cov-config=pyproject.toml",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    # pytest-html
    "--html=tests-reports/index.html",
    "--self-contained-html",
]

[tool.coverage.run]
branch = true
parallel = true
omit = [
    "tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __str__",
    "def __repr__",
    "if self.debug",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.coverage.html]
directory = "tests-reports/coverage"

[tool.coverage.xml]
output = "tests-reports/coverage.xml"

# -----------------------------------------------
# Linters

[tool.ruff]
required-version = "0.4.1"
target-version = "py312"
line-length = 88

[tool.ruff.format]
docstring-code-format = true
line-ending = "lf"
quote-style = "double"

[tool.ruff.lint]
select = [
    "F", # PyFlakes
    "E", "W", # pycodestyle
    "C90", # mccabe
    "I", # isort
    "N", # pep8-naming
    "D", # pydocstyle
    "UP", # pyupgrade
    "ERA", # eradicate
    "PGH", # pygrep-hooks
    "PL", # Pylint
    "TRY", # tryceratops
    "FLY", # flint
    "PERF", # Perflint
    "RUF", # Ruff
    # flake8-* plugins
    "A", "ANN", "ARG", "ASYNC", "B", "BLE", "C4", "COM", "DTZ", "EM", "EXE", "FIX",
    "G", "INP", "ISC", "LOG", "PIE", "PT", "PTH", "PYI", "Q", "RET", "RSE", "S",
    "SIM", "SLF", "SLOT", "T20", "TCH", "TD", "TID", "YTT",
]
ignore = [
    "ANN101", "ANN102", "ANN401", "COM812", "D105", "D107", "D203", "D213", "D301", "D417",
    "FURB101", "G004", "ISC001", "RET504", "TD002", "TD003", "TRY400",
]
exclude = ["tests/**/*.py"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"
multiline-quotes = "double"

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.pylint]
max-args = 6
